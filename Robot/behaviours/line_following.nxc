// Line following state function

sub line_following(int &motor_array[])
{
  switch (line_following_state) {
    case INITIAL:
      previous_tick = CurrentTick();
      line_following_state = STATE1;
      break;
    case STATE1:
      float error = 0;    // Error term for PID controller
      float correction = 0;
      float k_p = 1;        // Proportional Gain
      float k_i = 0.001;
      float k_d = 100.0;
      float light_val_right = 0;  // Value for right light sensor
      float light_val_left = 0;   // Value for left light sensor

      float dt = CurrentTick() - previous_tick;
      previous_tick = CurrentTick();

      // PID controller
      light_val_left = Sensor(LEFT_LIGHT) + 7;
      light_val_right = Sensor(RIGHT_LIGHT);

      error = light_val_left - light_val_right;
      // ERROR: Negativ -> Drej til venstre, Positiv -> Drej til hÃ¸jre.

      integral = integral + error * dt;
      float derivative = (error - last_error)/dt;

      if (integral > 15) {
        integral = 15;
      }

      correction = error * k_p + integral * k_i + derivative * k_d;

      if (correction < -1) {
        motor_array[LEFT] = SPEED - abs(correction);
        motor_array[RIGHT] = SPEED;
      }
      else if (correction > 1)
      {
        motor_array[LEFT] = SPEED;
        motor_array[RIGHT] = SPEED - abs(correction);
      }
      last_error = error;
      break;

    default:
      break;
  }
}
