// Follow Plan state function

sub follow_plan(int &motor_array[], bool &cross_event)
{
  switch (follow_plan_state) {
    case INITIAL: // IDLE STATE
      follow_plan_state = STATE1;
      break;
    case STATE1: // TURN LEFT
      switch(turn_state)
      {
        case 0: // WAIT FOR CROSS EVENT
          if(cross_event){
            turn_state = 1;
          }
          else{
            motor_array[RIGHT] = TURN_SPEED;
            motor_array[LEFT] = -TURN_SPEED;
          }
          break;
        case 1: // WAIT FOR HIGH ENOUGH DIFFERENCE BETWEEN SENSORS
          float difference = abs(Sensor(LEFT_LIGHT) - Sensor(RIGHT_LIGHT));

          if(difference > 10){
            turn_state = 2;
          }
          else{
            motor_array[RIGHT] = TURN_SPEED;
            motor_array[LEFT] = -TURN_SPEED;
          }
          break;
        case 2: // WAIT FOR SMALL ENOUGH DIFFERENCE BETWEEN SENSORS
          float difference = abs(Sensor(LEFT_LIGHT) - Sensor(RIGHT_LIGHT));

          if(difference < 5){
            turn_state = 0;
            cross_event = false;
            follow_plan_state = STATE4;
          }
          else{
            motor_array[RIGHT] = TURN_SPEED;
            motor_array[LEFT] = -TURN_SPEED;
          }
      }
      break;
    case STATE2: // TURN RIGHT
      motor_array[RIGHT]  = -TURN_SPEED;
      motor_array[LEFT]   = TURN_SPEED;
      break;
    case STATE3: // FORWARD
      if(cross_event)
      {
        cross_event = false;
        follow_plan_state = INITIAL
      }
      break;
    case STATE4: // BACKWARDS
      break;
  }
}
